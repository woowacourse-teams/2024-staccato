name: Android CI for develop

on:
  pull_request:
    paths: 'android/**'
    branches: [ "develop" ]
  workflow_dispatch:

env:
  BASE_URL: ${{ secrets.BASE_URL }}
  GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
  SECRETS_PROPERTIES: ${{ secrets.SECRETS_PROPERTIES }}
  LOCAL_DEFAULTS_PROPERTIES: ${{ secrets.LOCAL_DEFAULTS_PROPERTIES }}
  UPLOAD_KEY_STORE_JKS: ${{ secrets.UPLOAD_KEY_STORE_JKS }}
  KEY_STORE_PROPERTIES: ${{ secrets.KEY_STORE_PROPERTIES }}

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./android/Staccato_AN

    permissions:
      contents: read
      checks: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Create local.properties
        run: |
          touch local.properties

      - name: Set Base Url in local.properties
        run: |
          echo "base_url=\"$BASE_URL\"" >> local.properties

      - name: Create google-services.json
        run: |
          echo $GOOGLE_SERVICES_JSON > ./app/google-services.json

      - name: Create secrets.properties
        run: |
          echo $SECRETS_PROPERTIES > secrets.properties

      - name: Create local.defaults.properties
        run: |
          echo $LOCAL_DEFAULTS_PROPERTIES > local.defaults.properties

      - name: Create KeyStore File and Properties
        run: |
          mkdir ./app/signing
          echo "$UPLOAD_KEY_STORE_JKS" | base64 --decode > ./app/signing/upload_key_store.jks
          echo "$KEY_STORE_PROPERTIES" > ./app/signing/keystore.properties

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Check Lint
        run: ./gradlew ktlintCheck

      - name: Run Test
        run: ./gradlew testDebugUnitTest --stacktrace --no-build-cache --no-parallel

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: app/build/test-results/**/*.xml
