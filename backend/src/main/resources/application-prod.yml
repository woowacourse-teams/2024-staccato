spring:
  config:
    activate:
      on-profile: prod
  application:
    name: staccato
  sql:
    init:
      mode: always
  datasource:
    writer:
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbcUrl: ${SPRING_WRITER_DATASOURCE_URL}
      username: ${SPRING_DATASOURCE_USERNAME}
      password: ${SPRING_DATASOURCE_PASSWORD}
    reader:
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbcUrl: ${SPRING_READER_DATASOURCE_URL}
      username: ${SPRING_DATASOURCE_USERNAME}
      password: ${SPRING_DATASOURCE_PASSWORD}
  jpa:
    database: MYSQL
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        create_empty_composites.enabled: true
    hibernate:
      ddl-auto: validate
    database-platform: org.hibernate.dialect.MySQL8Dialect
    defer-datasource-initialization: false
    open-in-view: false
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    baseline-version: 1
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB
springdoc:
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  api-docs:
    enabled: false
security:
  jwt:
    token:
      secret-key: ${SECRET_KEY}
  admin:
    key: ${ADMIN_KEY}
    token: ${ADMIN_TOKEN}
cloud:
  aws:
    s3:
      bucket: ${AWS_S3_BUCKET}
      endpoint: ${AWS_S3_ENDPOINT}
    cloudfront:
      endpoint: ${AWS_CLOUDFRONT_ENDPOINT}
    region:
      static: ${AWS_REGION_STATIC}
    stack:
      auto: false
image:
  folder:
    name: image-prod/

management:
  server:
    port: 8080
  endpoints:
    web:
      exposure:
        include: info, health, metrics, env, beans, threaddump, loggers, prometheus
  endpoint:
    health:
      show-components: when_authorized

server:
  tomcat:
    mbeanregistry:
      enabled: true
