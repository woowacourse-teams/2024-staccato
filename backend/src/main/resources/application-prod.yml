spring:
  config:
    activate:
      on-profile: prod
  application:
    name: staccato
  sql:
    init:
      mode: always
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ENC(VKMyrVpLrR1Mvtdx1zm3EB4gKFgeaqVIc6Wf3s+6Cu9e3w+lGLew5G62xyOyFZ2NeBUOlx11i8Z1aEZUzuPmC2PfdG9uzoTxi2Es3WWeZK3X4pP3h2dlN/crmkR8teISJR3xj/b6Zte5A2iYQ18GUo5QUNRnXbn8)
    username: ENC(qwQULh2q73p3VZxYNssXO0/Y4IvJzBTU)
    password: ENC(lIcEbKSmAdanR5azRumgNPVt+6+NFOOd)
    hikari:
      maximum-pool-size: 10
      minimum-idle: 10
      idle-timeout: 600000
      connection-timeout: 8000
      max-lifetime: 1800000
#    writer:
#      hikari:
#        maximum-pool-size: 10
#        minimum-idle: 10
#        idle-timeout: 600000
#        connection-timeout: 8000
#        max-lifetime: 1800000
#      driver-class-name: com.mysql.cj.jdbc.Driver
#      jdbcUrl: ${SPRING_WRITER_DATASOURCE_URL}
#      username: ${SPRING_DATASOURCE_USERNAME}
#      password: ${SPRING_DATASOURCE_PASSWORD}
#    reader:
#      hikari:
#        maximum-pool-size: 10
#        minimum-idle: 10
#        idle-timeout: 600000
#        connection-timeout: 8000
#        max-lifetime: 1800000
#      driver-class-name: com.mysql.cj.jdbc.Driver
#      jdbcUrl: ${SPRING_READER_DATASOURCE_URL}
#      username: ${SPRING_DATASOURCE_USERNAME}
#      password: ${SPRING_DATASOURCE_PASSWORD}
  jpa:
    database: MYSQL
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        create_empty_composites.enabled: true
    hibernate:
      ddl-auto: validate
    database-platform: org.hibernate.dialect.MySQL8Dialect
    defer-datasource-initialization: false
    open-in-view: false
  flyway:
    enabled: true
    locations: classpath:db/migration
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB

jasypt:
  encryptor:
    password: ${JASYPT_PASSWORD}

springdoc:
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  api-docs:
    enabled: false
security:
  jwt:
    token:
      secret-key: ENC(gFDkISN4LtWFZS3VqD8DcY/sJ7oQoSwp2IzgnQh3mZ7Uky6epMIDgk9TIZ57xfw8yOwBl5AbDKQae0SRAUJCFptIBAls44ty)
  admin:
    key: ${ADMIN_KEY}
    token: ${ADMIN_TOKEN}
cloud:
  aws:
    access-key: ENC(kJlFbJL+MaD3rV9fB+bQglhlbK82rlKvW0+g0hgsFJQ=)
    secret-access-key: ENC(+hUItwfvS1Y+nU/j/zyf55o9NyB1Ak/60vbpBrNK9WGPfAMw+5XITnb06vMoknI112dFMhYA+Rw=)
    s3:
      bucket: ENC(VW+RubsMNPc33D+R+NU6X81EBrgAZyWh)
      endpoint: ENC(ZgPOwy0o4ZLHsHWokjoDi1qyYnCSJVHct8zS4JN+RduQNRldP53WlGle0E33w7f7BIJNuARXhbnEOPIVUMv+pw==)
    cloudfront:
      endpoint: ENC(7ZbtWn0aC7ctosFZt3HSzgT1sv3n3AQoVz52ZchiZrtSkq1jtWLNur5+KlRQqZqA)
    region:
      static: ENC(zgXzsvay+o8RHzj5+OsJwW10YuVMruaf)
    stack:
      auto: false
image:
  folder:
    name: prod/

management:
  server:
    port: 9292
  endpoints:
    web:
      exposure:
        include: info, health, prometheus
    jmx:
      exposure:
        exclude: "*"
  endpoint:
    health:
      show-components: never

server:
  tomcat:
    accept-count: 100
    max-connections: 2048
    threads:
      min-spare: 10
      max: 30
    mbeanregistry:
      enabled: true
