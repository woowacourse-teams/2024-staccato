plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

jacoco {
	toolVersion '0.8.8'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom("io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom:2.15.0")
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	implementation 'software.amazon.awssdk:s3:2.26.21'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'
	implementation 'com.google.firebase:firebase-admin:9.4.3'
//	implementation("io.opentelemetry:opentelemetry-exporter-otlp")
//	implementation("io.opentelemetry.instrumentation:opentelemetry-spring-boot-starter")
//	implementation 'io.opentelemetry.instrumentation:opentelemetry-jdbc:2.15.0-alpha'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'

	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'

	testImplementation 'org.testcontainers:testcontainers-bom:1.20.5'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:mysql'
	testImplementation 'org.testcontainers:localstack'

	testImplementation 'io.rest-assured:rest-assured:5.3.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

//test {
//	systemProperty "JASYPT_PASSWORD", project.findProperty("JASYPT_PASSWORD") ?: ""
//}

jacocoTestReport {
	executionData(fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec"))

	reports {
		html.required.set(true)
		xml.required.set(true)
		csv.required.set(false)
	}
}

/*jacocoTestCoverageVerification {
	violationRules {
		rule {
			element 'CLASS'
			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.7
			}

			excludes = ['*.config.*','*.*Builder.*']
		}
	}
}*/
